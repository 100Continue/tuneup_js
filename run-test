#!/usr/bin/env ruby -wKU

require "fileutils"
require "pty"

unless ARGV.length >= 3
  STDERR.puts "USAGE: run-test-script <app bundle> <test script> <output directory> [device_id]"
  STDERR.puts "NB: If no device_id is specified, the test will be run using the iOS Simulator"
  exit 1
end

app_bundle, test_script, test_output, device_id = *ARGV

# Instruments wants the test_script to be a fully-qualified path
unless test_script[0] == "/"
  test_script = "#{Dir.pwd}/#{test_script}"
end

SDKROOT = `/usr/bin/xcodebuild -version -sdk iphoneos | grep PlatformPath`.split(":")[1].chomp.sub(/^\s+/, "")

command = ["/usr/bin/instruments"] 
command << "-w #{device_id}" unless device_id.nil?
command << "-t #{SDKROOT}/Developer/Library/Instruments/PlugIns/AutomationInstrument.bundle/Contents/Resources/Automation.tracetemplate"
command << app_bundle 
command << "-e UIASCRIPT #{test_script}"
command << "-e UIARESULTSPATH #{test_output}"
puts "command=#{command.join ' '}"

failed = false

unless File.directory? test_output
  FileUtils.mkdir_p test_output
end

Dir.chdir(test_output) do
  begin
    PTY.spawn(command.join ' ') do |r, w, pid|
      r.each do |line|
        puts line
        _, date, time, tz, type, msg = line.match(/^(\d{4}-\d{2}-\d{2}) (\d{2}:\d{2}:\d{2}) ([+-]\d{4}) ([^:]+): (.*)$/).to_a

        case type
        when "Fail"
          failed = true
        end
      end
    end     
  rescue Errno::EIO
  rescue PTY::ChildExited => e
    STDERR.puts "Instruments exited unexpectedly" 
    exit 1
  end

  if failed
    STDERR.puts "#{test_script} failed, see log output for details"
    exit 1
  else
    STDOUT.puts "TEST PASSED"
  end
end
